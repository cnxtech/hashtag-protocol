name: 1-hashtag-docs

# The toolstack used to build the application.
type: nodejs:14

# Configuration of the build of this application.
build:
    flavor: none

# The configuration of app when it is exposed to the web.
web:
    commands:
      # Run a no-op process that uses no CPU resources, since this is a static site.
      start: sleep infinity
    # Specific parameters for different URL prefixes.
    locations:
        "/":
            # The folder from which to serve static assets, for this location.
            #
            # This is a filesystem path, relative to the application root.
            root: "deploy"
            index:
                - "index.html"
            # How long to allow static assets from this location to be cached.
            #
            # Can be a time in seconds, or -1 for no caching. Times can be
            # suffixed with "s" (seconds), "m" (minutes), "h" (hours), "d"
            # (days), "w" (weeks), "M" (months, as 30 days) or "y" (years, as
            # 365 days).
            expires: 300s
            scripts: true
            allow: true
            rules:
                \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|html|ico|svg?)$:
                    allow: true
                ^/robots\.txt$:
                    allow: true

disk: 512

# The 'mounts' describe writable, persistent filesystem mounts in the application.
# Become available after
mounts:
  '/deploy':
    source: local
    source_path: deploy
  # Cross-app shared drive.
  # @see /hashtag-protocol/.platform/services.yaml
  '/shared':
    source: service
    service: shared
    source_path: shared

# Build dependencies
dependencies:
  nodejs:
    yarn: "*"

# The hooks executed at various points in the lifecycle of the application.
hooks:
    build: |
      set -e
      yarn install
      mkdir build
      mkdir tmp
      npm run build
    post_deploy: |
      # If we're building on Platform.sh...
      if [ -d /app/.global ]; then
        # Copy raw markdown documents to shared drive.
        /app/scripts/platformsh/push-docs.sh
        # Move static build files to deploy/web folder.
        cp -R build/* deploy/
      fi
