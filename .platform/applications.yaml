- name: hashtag-api
  type: nodejs:14
  source:
    root: /
  build:
    flavor: none
  web:
    commands:
      start: "node hashtag-api/index.js"
    # Specific parameters for different URL prefixes.
    locations:
      "/public/images":
        # The folder from which to serve static assets, for this location.
        #
        # This is a filesystem path, relative to the application root.
        # Folder name is set in npm run buildenvvar.
        root: "public/images"
        passthru: false

        # How long to allow static assets from this location to be cached.
        #
        # Can be a time in seconds, or -1 for no caching. Times can be
        # suffixed with "s" (seconds), "m" (minutes), "h" (hours), "d"
        # (days), "w" (weeks), "M" (months, as 30 days) or "y" (years, as
        # 365 days).
        expires: 1h
        scripts: false
        rules:
          # Restrict access to markdown (.png) files.
          \.(png)$:
            allow: true
          ^/robots\.txt$:
            allow: false
  relationships:
    chromeheadlessbrowser: "headlessbrowser:http"
  disk: 512
  mounts:
  "/public/images":
    source: local
    source_path: images

- name: 1-hashtag-docs
  type: nodejs:14
  source:
    root: /
  build:
    flavor: none
  web:
    commands:
      # Run a no-op process that uses no CPU resources, since this is a static site.
      start: sleep infinity
    locations:
      "/":
        root: "hashtag-docs/build"
        index:
          - "index.html"
        expires: 300s
        scripts: true
        allow: true
        rules:
          \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|html|ico|svg?)$:
            allow: true
          ^/robots\.txt$:
            allow: true
  disk: 512
  dependencies:
    nodejs:
      yarn: "*"
  hooks:
    build: |
      set -e
      cd hashtag-docs
      yarn install
      yarn build

- name: 2-hashtag-dapp
  type: nodejs:14
  source:
    root: /
  build:
    flavor: none
  hooks:
    build: |
      set -e
      cd hashtag-dapp
      yarn install
      yarn build
      # Building on platform.sh
      if [ -d /app/.global ]; then
        echo "--------------------------------------------------"
        echo "Symlink /hashtag-dapp/tmp/config.js to hashtag-dapp/dist/config.js"
        echo "--------------------------------------------------"
        ln -fs /hashtag-dapp/tmp/config.js hashtag-dapp/dist/config.js
      fi
    #The deploy hook runs after your application has been deployed and started.
    deploy: |
      # Deploying on platform.sh
      if [ -d /app/.global ]; then
        echo "----------------------------------------------"
        echo "Putting PLATFORM_VARIABLES into /hashtag-dapp/tmp/config.js"
        echo "----------------------------------------------"
        echo "config = $(echo $PLATFORM_VARIABLES | base64 -d)" >| /hashtag-dapp/tmp/config.js
      fi

  web:
    upstream:
      socket_family: tcp
      protocol: http
    commands:
      start:
        echo "config = $(echo $PLATFORM_VARIABLES | base64 -d)" > /hashtag-dapp/tmp/config.js
        sleep infinity
    locations:
      "/":
        root: "hashtag-dapp/dist"
        index:
          - "index.html"
        passthru: /index.html
        expires: 300s
        scripts: true
        # Deny access to static files in this location.
        allow: false
        rules:
          \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|html|ico|svg?)$:
            allow: true
          ^/robots\.txt$:
            allow: true
  disk: 512
  dependencies:
    nodejs:
      yarn: "*"

- name: 3-hashtag-website
  type: nodejs:14
  source:
    root: /
  build:
    flavor: none
  web:
    locations:
      "/":
        root: "hashtag-website/dist"
        index:
          - "index.html"
        passthru: /index.html
        expires: 300s
        scripts: true
        # Deny access to static files in this location.
        allow: false
        rules:
          \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|html|ico|svg?)$:
            allow: true
          ^/robots\.txt$:
            allow: true
  disk: 512
  dependencies:
    nodejs:
      yarn: "*"
  hooks:
    build: |
      set -e
      cd hashtag-website
      yarn install
      yarn build
